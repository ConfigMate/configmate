name: Bump version

on:
  pull_request:
    branches:
      - master
    types:
      - closed
    paths-ignore:
      - '.bumpversion.cfg'

env:
  BUMPVERSION_FLAGS: "--verbose --allow-dirty"

jobs:
  bumpversion:
    if: github.event.pull_request.merged
    name: Bump version
    runs-on: ubuntu-latest
    
    steps:
      - name: Log GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"
      
      - name: Checkout repository
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v4.5.0
        with:
            python-version: '3.x'

      - name: Setup Python Env
        run: |
          pip install bump2version
          pip install pipenv
          pipenv --where --venv --py --envs --support install --dev

      - name: Stage changes
        run: |
          git config --global user.name "$(git log --format=%an -n1)"
          git config --global user.email "$(git log --format=%ae -n1)"
      
      # bump version depending on pull request title convention
      - name: Bump patch version
        if: startsWith(github.event.pull_request.title, 'patch')
        run: |
          pipenv run bump2version patch ${{ env.BUMPVERSION_FLAGS }}
          echo BUMPED=true >> $GITHUB_ENV

      - name: Bump minor version
        if: startsWith(github.event.pull_request.title, 'feature')
        run: |
          pipenv run bump2version minor ${{ env.BUMPVERSION_FLAGS }}
          echo BUMPED=true >> $GITHUB_ENV

      - name: Bump major version
        if: startsWith(github.event.pull_request.title, 'major')
        run: |
          pipenv run bump2version major ${{ env.BUMPVERSION_FLAGS }}
          echo BUMPED=true >> $GITHUB_ENV

      - name: Bump release
        if: startsWith(github.event.pull_request.title, 'release')
        run: |
          pipenv run bump2version release ${{ env.BUMPVERSION_FLAGS }}
          echo BUMPED=true >> $GITHUB_ENV

      # amend last pr commit with  and push
      - name: Amend PR commit with bumped version
        if: ${{ env.BUMPED == 'true' }}
        run: |
          git add .bumpversion.cfg
          git commit --amend --no-edit
          git tag -a "v$(grep 'current_version =' .bumpversion.cfg | sed 's/^[[:space:]]*current_version = //')" -m "$(git log --format=%B -n1)"

      - name: Push changes
        if: ${{ env.BUMPED == 'true' }}
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.ACCESS_TOKEN }}
          force: true